import re

from aiogram import Router, F
from aiogram.filters.command import Command
from aiogram.types import Message, FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.utils.chat_action import ChatActionSender

from markup import markup
from other import PrimaryState, bot, NoDealInBitrix, bitrix
from view.bitrix import completion_bitrix

router = Router()

start_message = f"""
`–ü—Ä–∏–≤–µ—Ç, —Ä–∞–¥–∞ –Ω–æ–≤–æ–º—É –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É!`

–Ø `–ì–∏–ª—å–¥–∏–Ω–∞`üë©, —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫-–∫–æ–º–ø–∞–Ω—å–æ–Ω –ø—Ä–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –º–∏—Å—Å–∏–π _‚Äú–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏‚Äù_. 
–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Å–≤–æ–∏—Ç—å—Å—è –≤ –ì–∏–ª—å–¥–∏–∏ –ò–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä–æ–≤üèØ –∏ —Ä–∞—Å—Å–∫–∞–∂—É –≤—Å–µ, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å.

–ö–≤–µ—Å—Ç —Ä–∞–∑–¥–µ–ª–µ–Ω –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö –º–∏—Å—Å–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –ì–∏–ª—å–¥–∏–∏üèØ, —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ –∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –±–ª–∏–∂–µ —Å _–∫–æ–ª–ª–µ–≥–∞–º–∏-–∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä–∞–º–∏_.

–ö—Å—Ç–∞—Ç–∏, –º–æ–∂–µ—à—å –∑–≤–∞—Ç—å –º–µ–Ω—è –ø—Ä–æ—Å—Ç–æ `–ì–∞–ª—è`üë©
"""

who = """
`–ê –∫—Ç–æ –∂–µ —Ç–æ—Ç –≤–æ–∏–Ω, –æ –∫–æ—Ç–æ—Ä–æ–º —Å–∫–∞–ª—å–¥—ã —Å–ª–æ–∂–∞—Ç –ø–µ—Å–Ω–∏?...`

_–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?_
"""

mes_connect_chat_guild = """
–û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ, *{Name}*!

–ò –≤–æ—Ç —Ç–≤–æ—è –ø–µ—Ä–≤–∞—è –º–∏—Å—Å–∏—è _‚Äú–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —á–∞—Ç‚Äù_.

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Å—å –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É —á–∞—Ç—É –ß–ª–µ–Ω–æ–≤ –ì–∏–ª—å–¥–∏–∏ –ø–æ [—Å—Å—ã–ª–∫–µ](https://t.me/+LSBI6iI_SNdjOGNi) –∏ –Ω–∞–∂–º–∏ _‚Äú–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è‚Äù_
"""

mes_connect_portal = """
–ú—ã –∫–∞–∫ –∏ –ª—é–±–∞—è –≥–∏–ª—å–¥–∏—è –∏–º–µ–µ–º —Å–≤–æ—é –æ–±–∏—Ç–µ–ª—å, –≤ –Ω–µ–π –Ω–µ —Ç–æ–ª—å–∫–æ —É—é—Ç–Ω–æ, –Ω–æ —Ç–∞–∫–∂–µ –º–Ω–æ–≥–æ –≤–æ–ª—à–µ–±–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π. 

–ü—Ä–æ–µ–∫—Ü–∏–∏ –Ω–∞—à–∏—Ö –≤—Å—Ç—Ä–µ—á, —à–∞–±–ª–æ–Ω—ã –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —á—É–¥–µ—Å–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ 
–¥–∞–∂–µ –≤ —Å–∞–º—ã–π —Ö–º—É—Ä—ã–π –¥–µ–Ω—å. –í–æ—Ç –¥–µ—Ä–∂–∏ [—Å—Å—ã–ª–∫—É](https://portal.gildin.ru)  –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è!

–í–æ—Ç —Ç–≤–æ–∏ 
–ª–æ–≥–∏–Ω: {log}
–ø–∞—Ä–æ–ª—å: {pas}

–¢–æ–ª—å–∫–æ –Ω–µ –∑–∞–±—É–¥—å —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å!
"""


@router.message(Command("start"))
async def start_handler(message: Message, state: FSMContext):
    async with ChatActionSender.typing(bot=bot, chat_id=message.chat.id):

        try:
            user_data = await completion_bitrix(message, 1)
            # print(user_data.name)
            # print(user_data.id_user)
            # print(user_data.last_name)
            # print(user_data.id_deal)
            await state.update_data(user=user_data)
            await message.answer(start_message, parse_mode="Markdown")
            await message.answer_sticker(FSInputFile('data/stickers/hello.png'))
            await message.answer(who,
                                 parse_mode="Markdown",
                                 reply_markup=markup.EMPTY,
                                 input_field_placeholder="–ò–º—è")
            await state.set_state(PrimaryState.getName)
        except:
            await message.answer("–£ –º–µ–Ω—è –ø—Ä–æ–±–ª–µ–º—ã! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–ø–æ–∑–∂–µ:)")


# –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É
@router.message(PrimaryState.getName, F.text)
async def get_name_handler(message: Message, state: FSMContext):
    context_data = await state.get_data()
    user_data = context_data.get('user')
    user_data.name = message.text
    if user_data.id_deal == "":
        await message.answer("–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –≤–∞—Å. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é!")
        await state.update_data(user=user_data)
        await state.set_state(NoDealInBitrix.whereDeal)
    else:
        await message.answer(
            text=mes_connect_chat_guild.format(Name=user_data.name),
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è",
                                                                                     callback_data="connect_chat")]]),
            parse_mode="Markdown"
        )
        await state.update_data(user=user_data)


@router.message(PrimaryState.getLink)
async def get_website_link(message: Message, state: FSMContext):
    context_data = await state.get_data()
    user_data = context_data.get('user')
    link = re.search(r'(https?://\S+)', message.text)
    if link:
        company = await bitrix.get_by_ID('crm.company.get', [user_data.id_company])
        await bitrix.call('crm.company.update',
                          {
                              'ID': user_data.id_company,
                              'fields': {
                                  'UF_CRM_1698299794740': list(company.values())[0]['WEB'] + [link.group()]
                              }
                          })
        await message.answer(
            text=mes_connect_portal.format(log=user_data.login, pas=user_data.password),
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è",
                                                                                     callback_data="connect_obit")]]),
            parse_mode="Markdown"
        )
        await state.set_state(PrimaryState.finishState)
    else:
        await message.answer("–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Å—Å—ã–ª–∫—É, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑))")
